plugins {
    id 'fabric-loom' version '1.2-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {
	maven {
		name = "jitpack.io"
		url = "https://jitpack.io"
	}
	maven {
		name = 'swt-repo'
		url = "https://maven-eclipse.github.io/maven"
	}
	repositories {
		maven {
			name = 'Ladysnake Mods'
			url = 'https://maven.ladysnake.org/releases'
			content {
				includeGroup 'io.github.ladysnake'
				includeGroup 'org.ladysnake'
				includeGroupByRegex 'dev\\.onyxstudios.*'
			}
		}
	}
	mavenCentral()
	jcenter()
}

loom {
    accessWidenerPath = file("src/main/resources/oyvey.accesswidener")
}

configurations {
	modImpl
    implementation.extendsFrom(implementationInclude)
    include.extendsFrom(implementationInclude)
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

        // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    //Others
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'com.sun.net.httpserver:http:20070405'

    //Console Log
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'org.slf4j:slf4j-simple:1.7.30'

    //Socked
    implementation 'javax.websocket:javax.websocket-api:1.1'
    implementation 'org.java-websocket:Java-WebSocket:1.5.2'
    //Others
    implementation 'org.json:json:20210307'
    implementation 'com.formdev:flatlaf:3.0'
    //Cpu visor intel amd
    implementation 'org.lwjgl:lwjgl:3.2.3'
    implementation 'org.lwjgl:lwjgl-glfw:3.2.3'
    implementation 'org.lwjgl:lwjgl-opengl:3.2.3'
    //SRV dISCORDtest
    implementation 'com.discord4j:discord4j-core:3.2.1'
    //implementation 'net.dv8tion:JDA:4.4.0-BETA'
    //implementation 'net.dv8tion:JDA:4.2.0_168'//complete

    //implementationInclude("net.dv8tion:JDA:${project.jda_version}") {
    //    exclude module: 'opus-java'
    //}

    //Shaders
    modImpl("org.ladysnake:satin:${project.satin_version}")
    
	configurations.modImpl.dependencies.each {
		modImplementation(it)
		include(it)
	}
    }

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
